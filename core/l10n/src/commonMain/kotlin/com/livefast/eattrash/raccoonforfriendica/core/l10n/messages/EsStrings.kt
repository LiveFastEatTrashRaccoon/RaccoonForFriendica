package com.livefast.eattrash.raccoonforfriendica.core.l10n.messages

internal val EsStrings =
    object : DefaultStrings() {
        override val messageConfirmExit = "Pulsar de nuevo üîô para salir"
        override val messageAreYouSure = "Est√°s seguro/a de que deseas continuar?"
        override val messageSuccess = "¬°Operaci√≥n completada con √©xito!"
        override val messageGenericError = "Se ha producido un error inesperado"
        override val messageInvalidField = "Campo no v√°lido"
        override val messageMissingField = "Falta un campo"
        override val messageEmptyList = "No hay nada que mostrar aqu√≠ üóëÔ∏èÔ∏è"
        override val buttonConfirm = "Confirmar"
        override val buttonOk = "OK"
        override val buttonClose = "Cerrar"
        override val buttonCancel = "Cancelar"
        override val systemDefault = "Sistema"
        override val settingsThemeLight = "Claro"
        override val settingsThemeDark = "Oscuro"
        override val settingsThemeBlack = "Oscuro (AMOLED)"
        override val sectionTitleHome = "Publicaciones"
        override val sectionTitleExplore = "Explorar"
        override val sectionTitleInbox = "Notificaciones"
        override val sectionTitleProfile = "Perfil"
        override val barThemeOpaque = "Opaco"
        override val barThemeTransparent = "Transparente"
        override val timelineAll = "Todos"
        override val timelineSubscriptions = "Suscripciones"
        override val timelineLocal = "Local"
        override val nodeVia = "v√≠a"
        override val timelineEntryInReplyTo = "en respuesta a"
        override val timelineEntryRebloggedBy = "redistribuido por"

        override fun accountFollower(count: Int) =
            when (count) {
                1 -> "seguidor"
                else -> "seguidores"
            }

        override fun accountFollowing(count: Int) =
            when (count) {
                1 -> "seguido"
                else -> "seguidos"
            }

        override val accountAge = "edad cuenta"
        override val dateYearShort = "a"
        override val dateMonthShort = "m"
        override val dateDayShort = "d"
        override val timeHourShort = "h"
        override val timeMinuteShort = "min"
        override val timeSecondShort = "s"
        override val accountSectionPosts = "Publicaciones"
        override val accountSectionAll = "Publicaciones & Respuestas"
        override val accountSectionPinned = "Fijados"
        override val accountSectionMedia = "Multimediales"
        override val postTitle = "Publicar"
        override val settingsTitle = "Ajustes"
        override val settingsHeaderGeneral = "General"
        override val settingsItemLanguage = "Idioma"
        override val settingsHeaderLookAndFeel = "Aspecto"
        override val settingsItemTheme = "Tema de interfaz"
        override val settingsItemFontFamily = "Familia de fuentes"
        override val settingsItemDynamicColors = "Material You"
        override val settingsItemDynamicColorsSubtitle = "genera una paleta basada en su fondo"
        override val settingsItemThemeColor = "Color del tema"
        override val settingsItemThemeColorSubtitle =
            "s√≥lo se aplica si ¬´Material You¬ª est√° desactivado"
        override val themeColorPurple = "Pulpo portentoso"
        override val themeColorBlue = "Ballena bailarina"
        override val themeColorLightBlue = "Delf√≠n distra√≠do"
        override val themeColorGreen = "Rana relajada"
        override val themeColorYellow = "Erizo errante"
        override val themeColorOrange = "Zorro zancudo"
        override val themeColorRed = "Cangrejo crujiente"
        override val themeColorPink = "Unicornio √∫nico"
        override val themeColorGray = "Mapache maloliente"
        override val themeColorWhite = "Panda peludo"
        override val messageUserUnlogged = "Necesitas iniciar una sesi√≥n para acceder a esta secci√≥n ü™µ"
        override val loginTitle = "Iniciar sesi√≥n"
        override val fieldNodeName = "Nombre de instancia"
        override val fieldUsername = "Nombre de usuario"
        override val fieldPassword = "Contrase√±a"
        override val actionLogout = "Cerrar sesi√≥n"
        override val relationshipStatusFollowing = "Despu√©s de"
        override val relationshipStatusFollowsYou = "Te sigue"
        override val relationshipStatusMutual = "Mutuo"
        override val relationshipStatusRequestedToOther = "Solicitud enviada"
        override val relationshipStatusRequestedToYou = "Solicitud pendiente"
        override val notificationTypeEntry = "ha publicado un post"
        override val notificationTypeFavorite = "ha a√±adido tu post a favoritos"
        override val notificationTypeFollow = "ha empezado a seguirte"
        override val notificationTypeFollowRequest = "te ha enviado una solicitud de seguimiento"
        override val notificationTypeReply = "te ha respondido"
        override val notificationTypePoll = "se ha cerrado una encuesta en la que has participado"
        override val notificationTypeReblog = "ha redistribuido tu mensaje"
        override val notificationTypeUpdate =
            "ha actualizado una publicaci√≥n que has redistribuido"
        override val exploreSectionHashtags = "Hashtags"
        override val exploreSectionLinks = "Enlaces"
        override val exploreSectionSuggestions = "Para ti"

        override fun hashtagPeopleUsing(count: Int) =
            when (count) {
                1 -> "persona est√° hablando de ello"
                else -> "personas est√°n hablando de ello"
            }

        override val feedTypeTitle = "Tipo de l√≠nea temporal"
        override val followerTitle = "Seguidores"
        override val followingTitle = "Despu√©s de"
        override val actionFollow = "Seguir"
        override val actionUnfollow = "Dejar de seguir"
        override val actionDeleteFollowRequest = "Cancelar solicitud de seguimiento"
        override val sidebarAnonymousTitle = "An√≥nimo"
        override val sidebarAnonymousMessage =
            "¬°Bienvenido/a a Raccoon!\n\nPuedes iniciar sesi√≥n en tu instancia en cualquier momento desde la pantalla Perfil.\n\n¬°Disfruta de Friendica!"
        override val bookmarksTitle = "Marcados"
        override val favoritesTitle = "Favoritos"
        override val followedHashtagsTitle = "Hashtags seguidos"
        override val infoEdited = "editado"

        override fun extendedSocialInfoFavorites(count: Int) =
            when (count) {
                1 -> "favorito"
                else -> "favoritos"
            }

        override fun extendedSocialInfoReblogs(count: Int) =
            when (count) {
                1 -> "redistribuci√≥n"
                else -> "redistribuciones"
            }

        override val actionMuteNotifications = "Silenciar notificaciones"
        override val createPostTitle = "Crear mensaje"
        override val messagePostEmptyText =
            "Por favor, proporcionar un archivo adjunto o una encuesta o alg√∫n texto"
        override val visibilityPublic = "P√∫blico"
        override val visibilityUnlisted = "Sin clasificar"
        override val visibilityPrivate = "Privado (Friendica)"
        override val visibilityDirect = "S√≥lo menciones"
        override val createPostBodyPlaceholder = "Tu impresionante nuevo post‚Ä¶ ü™Ñ"
        override val createPostAttachmentsSection = "Archivos adjuntos"
        override val actionEdit = "Editar"
        override val pictureDescriptionPlaceholder = "Descripci√≥n de la imagen"
        override val insertLinkDialogTitle = "Insertar enlace"
        override val insertLinkFieldAnchor = "Ancla"
        override val insertLinkFieldUrl = "URL"
        override val selectUserDialogTitle = "Seleccionar un usuario"
        override val selectUserSearchPlaceholder = "nombre de usuario"
        override val searchSectionUsers = "Usuarios"
        override val searchPlaceholder = "Buscar en el Fediverso"
        override val messageSearchInitialEmpty = "Empieza a escribir algo"
        override val topicTitle = "Tema"
        override val threadTitle = "Conversaci√≥n"
        override val buttonLoadMoreReplies = "Cargar m√°s respuestas"
        override val postSensitive = "Contenido sensible"
        override val actionCreateThreadInGroup = "Publicar en"
        override val settingsHeaderNsfw = "NSFW"
        override val settingsItemIncludeNsfw = "Incluir contenidos NSFW"
        override val settingsItemBlurNsfw = "Difuminar contenido NSFW"
        override val settingsItemDefaultTimelineType = "Tipo de l√≠nea temporal por defecto"
        override val actionDelete = "Borrar"
        override val actionShare = "Compartir"
        override val actionCopyUrl = "Copiar enlace"
        override val messageTextCopiedToClipboard = "¬°Copiado al portapapeles! üìã"
        override val contentScaleFit = "Ajustar el tama√±o"
        override val contentScaleFillWidth = "Llenar el ancho"
        override val contentScaleFillHeight = "Altura de llenado"
        override val contentScaleTitle = "Modo de escala"
        override val shareAsUrl = "Compartir como URL"
        override val shareAsFile = "Compartir como archivo"
        override val actionMute = "Silenciar"
        override val actionUnmute = "Anular el silencio"
        override val settingsItemBlockedAndMuted = "Gestionar filtros"
        override val manageBlocksSectionMuted = "Silenciado"
        override val manageBlocksSectionBlocked = "Bloqueado"
        override val actionBlock = "Bloquear"
        override val actionUnblock = "Desbloquear"
        override val messageLoginOAuth = "Iniciar sesi√≥n con OAuth2 (recomendado)"
        override val or = "o"
        override val messageLoginLegacy =
            "Iniciar sesi√≥n con nombre de usuario y contrase√±a (legado)"
        override val actionPin = "Fijar al perfil"
        override val actionUnpin = "Desenganchar del perfil"
        override val settingsSectionDebug = "Debug"
        override val settingsAbout = "Informaci√≥n sobre la aplicaci√≥n"
        override val settingsAboutAppVersion = "Versi√≥n"
        override val settingsAboutChangelog = "Registro de cambios"
        override val settingsAboutViewGithub = "Ver en GitHub"
        override val settingsAboutReportIssue = "Informar de un problema"
        override val settingsAboutViewFriendica = "Ver en Friendica"
        override val manageCirclesTitle = "C√≠rculos"
        override val createCircleTitle = "Crear c√≠rculo"
        override val editCircleTitle = "Editar c√≠rculo"
        override val circleEditFieldName = "Nombrar"
        override val circleAddUsersDialogTitle = "Seleccionar usuarios para a√±adir"
        override val visibilityCircle = "C√≠rculo"
        override val selectCircleDialogTitle = "Seleccionar un c√≠rculo"
        override val messagePostInvalidVisibility = "Seleccionar una opci√≥n de visibilidad v√°lida"
        override val settingsItemFontScale = "Tama√±o de letra"
        override val fontScaleNormal = "Normal"
        override val fontScaleSmaller = "M√°s peque√±o"
        override val fontScaleSmallest = "Peque√±√≠simo"
        override val fontScaleLarger = "M√°s grande"
        override val fontScaleLargest = "Grand√≠simo"
        override val settingsItemUrlOpeningMode = "Modo de apertura de URL"
        override val urlOpeningModeExternal = "Externo"
        override val urlOpeningModeCustomTabs = "Pesta√±as personalizadas"
        override val dialogErrorTitle = "Ups‚Ä¶"
        override val messagePollVoteErrorBody =
            "Por desgracia, s√≥lo soy un desarrollador m√≥vil y no puedo a√±adir los m√©todos back-end que faltan."
        override val buttonPollErrorOpenIssue =
            "Revisar este issue y pon un üëç para que los devs sepan que puede valer la pena implementarlo."
        override val actionVote = "Ver en GitHub"
        override val pollExpired = "Vota"
        override val shortUnavailable = "Expirado"

        override fun pollVote(count: Int): String =
            when (count) {
                1 -> "voto"
                else -> "votos"
            }

        override val pollExpiresIn = "Caduca en"
        override val actionHideResults = "Mostrar resultados"
        override val actionShowResults = "Ocultar resultados"
        override val inboxConfigureFilterDialogTitle = "Configurar filtros"
        override val inboxConfigureFilterDialogSubtitle =
            "Si se deselecciona alg√∫n valor, el filtro s√≥lo devolver√° los elementos no le√≠dos"
        override val notificationTypeEntryName = "Notificaciones de publicaciones"
        override val notificationTypeFavoriteName = "Favoritos"
        override val notificationTypeFollowName = "Nuevos seguidores"
        override val notificationTypeFollowRequestName = "Solicitudes de seguimiento"
        override val notificationTypeMentionName = "Menciones y respuestas"
        override val notificationTypePollName = "Encuestas"
        override val notificationTypeReblogName = "Redistribuir"
        override val notificationTypeUpdateName = "Publicar actualizaciones"
        override val muteDurationIndefinite = "Indefinido"
        override val selectDurationDialogTitle = "Seleccionar duraci√≥n"
        override val muteDurationItem = "No ver√°s ninguna publicaci√≥n de este usuario durante"
        override val muteDisableNotificationsItem = "Desactivar notificaciones"
        override val actionSendFollowRequest = "Enviar solicitud"
        override val postBy = "por"
        override val customOption = "Personalizar"
        override val colorPickerDialogTitle = "Seleccionar un color"
        override val followRequestsTitle = "Solicitudes de seguimiento"
        override val actionAccept = "Aceptar"
        override val actionReject = "Rechazar"
        override val actionHideContent = "Ocultar contenido"
        override val messageEmptyInbox = "üéâ ¬°Ya est√°s al d√≠a! üéâ\n\nVer√°s las nuevas notificaciones en esta p√°gina en cuanto lleguen"
        override val createPostSpoilerPlaceholder = "Texto del spoiler"
        override val createPostTitlePlaceholder = "T√≠tulo (opcional)"
        override val actionSwitchAccount = "Cambiar de cuenta"
        override val actionDeleteAccount = "Eliminar cuenta"
        override val editProfileTitle = "Editar perfil"
        override val editProfileSectionPersonal = "Datos personalesa"
        override val editProfileItemDisplayName = "Nombre para mostrar"
        override val editProfileItemBio = "Bio"
        override val editProfileSectionFlags = "Visibilidad y permisos"
        override val editProfileItemBot = "Soy un bot"
        override val editProfileItemLocked = "Requerir aprobaci√≥n manual para las solicitudes de seguimiento"
        override val editProfileItemDiscoverable = "Hacerme visible en las b√∫squedas"
        override val editProfileItemNoIndex = "Excluir mis publicaciones de los timelines p√∫blicos"
        override val unsavedChangesTitle = "Cambios no guardados"
        override val messageAreYouSureExit = "¬øEst√°s seguro/a de que quieres salir?"
        override val buttonSave = "Guardar"
        override val editProfileSectionFields = "Campos personalizados (experimental)"
        override val editProfileItemFieldKey = "Clave"
        override val editProfileItemFieldValue = "Valor"
        override val editProfileSectionImages = "Im√°genes (experimental)"
        override val editProfileItemAvatar = "Avatar"
        override val editProfileItemHeader = "Banner"
        override val nodeInfoTitle = "Informaci√≥n sobre la instancia"
        override val nodeInfoSectionRules = "Reglas"
        override val nodeInfoSectionContact = "Contacto"
        override val actionAddNew = "A√±adir nuevo"
        override val directMessagesTitle = "Mensajes directos"

        override fun messages(count: Int): String =
            when (count) {
                1 -> "mensaje"
                else -> "mensajes"
            }

        override val messageEmptyConversation = "Este es el comienzo de tu √©pica conversaci√≥n con"
        override val followRequiredMessage =
            "Debes seguir al otro usuario para poder enviarle un mensaje directo."
        override val galleryTitle = "Galer√≠a"

        override fun items(count: Int): String =
            when (count) {
                1 -> "elemento"
                else -> "elementos"
            }

        override val galleryFieldAlbumName = "Nombre del √°lbum"
        override val messageEmptyAlbum = "Parece que este √°lbum est√° vac√≠o‚Ä¶ ‚ú®"
        override val actionMove = "Mover"
        override val pickFromGalleryDialogTitle = "Seleccionar de la galer√≠a"

        override fun unreadMessages(count: Int): String =
            when (count) {
                1 -> "le√≠do"
                else -> "le√≠dos"
            }

        override val messageCharacterLimitExceeded =
            "Has superado el n√∫mero m√°ximo de caracteres permitido"
        override val userFieldPersonalNote = "Nota personal"
        override val actionEditPersonalNote = "Editar nota"
        override val actionCancelEditPersonalNote = "Terminar de editar nota"
        override val messageVideoNsfw = "Este v√≠deo puede contener contenido sensible üôà"
        override val buttonLoad = "Cargar"
        override val messageAreYouSureReblog =
            "Este post tiene m√°s de un mes. ¬øEst√°s seguro/a de que quieres redistribuirlo?"
        override val unpublishedTitle = "Art√≠culos no publicados"
        override val unpublishedSectionScheduled = "Programados"
        override val unpublishedSectionDrafts = "Borradores"
        override val actionSetScheduleDate = "Establecer horario"
        override val actionUpdateScheduleDate = "Cambiar horario"
        override val actionPublishDefault = "Publicar ahora"
        override val scheduleDateIndication = "Programado para:"
        override val messageScheduleDateInThePast = "Seleccionar una fecha futura"
        override val actionSaveDraft = "Guardar borrador"
        override val settingsItemDefaultPostVisibility = "Visibilidad por defecto de los mensajes"
        override val settingsItemDefaultReplyVisibility =
            "Visibilidad por defecto de las respuestas"
        override val reportCategoryLegal = "Cuesti√≥n legal"
        override val itemOther = "Otros"
        override val reportCategorySpam = "Spam"
        override val reportCategoryViolation = "Violaci√≥n de las normas del servidor"
        override val messageMissingRules = "Por favor, seleccionar al menos una regla"
        override val createReportTitleUser = "Denunciar"
        override val createReportTitleEntry = "Denunciar mensaje por"
        override val createReportItemCategory = "Categor√≠a"
        override val createReportCommentPlaceholder = "Describe el problema que has encontrado"
        override val createReportItemRules = "Normas infringidas"

        override fun createReportSelectedRules(count: Int) =
            when (count) {
                1 -> "regla seleccionada"
                else -> "reglas seleccionadas"
            }

        override val createReportItemForward = "Enviar informe"
        override val actionReportUser = "Denunciar usuario"
        override val actionReportEntry = "Denunciar publicaci√≥n"
        override val actionViewDetails = "Detalles"
        override val actionAddImage = "A√±adir imagen"
        override val actionAddImageFromGallery = "A√±adir imagen (galer√≠a)"
        override val actionAddPoll = "A√±adir encuesta"
        override val actionRemovePoll = "Eliminar encuesta"
        override val createPostPollSection = "Encuesta"
        override val createPostPollOptionLabel = "Opci√≥n"
        override val createPostPollItemMultiple = "Permitir opci√≥n m√∫ltiple"
        override val createPostPollItemExpirationDate = "Fecha de caducidad"
        override val messageInvalidPollError =
            "Encuesta no v√°lida, compruebe las opciones y la fecha de caducidad"
        override val userFeedbackFieldEmail = "Correo electr√≥nico o nombre de usuario (opcional)"
        override val userFeedbackFieldComment = "Comentarios"
        override val userFeedbackCommentPlaceholder =
            "Describe el problema que has encontrado o simplemente deja un comentario üñãÔ∏è"
        override val changeNodeDialogTitle = "Cambiar instancia"
        override val actionQuote = "Citar"
        override val actionAddSpoiler = "A√±adir spoiler"
        override val actionRemoveSpoiler = "Eliminar spoiler"
        override val actionAddTitle = "A√±adir t√≠tulo"
        override val actionRemoveTitle = "Eliminar t√≠tulo"
        override val actionRevealContent = "Mostrar contenido"
        override val settingsItemExcludeRepliesFromTimeline =
            "Excluir respuestas de la l√≠nea de tiempo"
        override val insertEmojiTitle = "Insertar emoji"
        override val messageLoadingUsers = "Cargar usuarios"
        override val actionOpenPreview = "Abrir vista previa"
        override val actionSwitchToClassicMode = "Cambiar al modo cl√°sico"
        override val actionSwitchToForumMode = "Cambiar al modo foro"
        override val settingsItemOpenGroupsInForumModeByDefault =
            "Abrir grupos en modo foro por defecto"
        override val actionInsertList = "Insertar lista"
        override val actionDismissAllNotifications = "Desechar todas las notificaciones"
        override val settingsItemMarkupMode = "Marcas de composici√≥n"
        override val markupModePlainText = "Texto sin formato"
        override val messageAltTextMissingError =
            "Algunos archivos adjuntos no tienen un texto alternativo, insertarlo puede mejorar la accesibilidad"
        override val buttonPublishAnyway = "Publicar de todos modos"
        override val actionCopyToClipboard = "Copiar al portapapeles"
        override val actionSaveToCalendar = "Guardar en el calendario"
    }
