package com.livefast.eattrash.raccoonforfriendica.core.l10n.messages

internal val FrStrings =
    object : DefaultStrings() {
        override val messageConfirmExit = "Appuyez √† nouveau sur üîô pour quitter."
        override val messageAreYouSure = "√ätes-vous s√ªr de vouloir continuer ?"
        override val messageSuccess = "L'op√©ration s'est d√©roul√©e avec succ√®s !"
        override val messageGenericError = "Une erreur inattendue s'est produite"
        override val messageInvalidField = "Champ invalide"
        override val messageMissingField = "Champ manquant"
        override val messageEmptyList = "Il n'y a rien √† afficher ici üóëÔ∏èÔ∏è"
        override val buttonConfirm = "Confirmer"
        override val buttonOk = "OK"
        override val buttonClose = "Fermer"
        override val buttonCancel = "Annuler"
        override val systemDefault = "Syst√®me"
        override val settingsThemeLight = "Clair"
        override val settingsThemeDark = "Noir"
        override val settingsThemeBlack = "Noir (AMOLED)"
        override val sectionTitleHome = "Postes"
        override val sectionTitleExplore = "Explorer"
        override val sectionTitleInbox = "Notifications"
        override val sectionTitleProfile = "Profil"
        override val barThemeOpaque = "Opaque"
        override val barThemeTransparent = "Transparent"
        override val timelineAll = "Tous"
        override val timelineSubscriptions = "Abonnements"
        override val timelineLocal = "Local"
        override val nodeVia = "par"
        override val timelineEntryInReplyTo = "en r√©ponse √†"
        override val timelineEntryRebloggedBy = "repartag√© par"

        override fun accountFollower(count: Int) =
            when (count) {
                1 -> "suiveur"
                else -> "suiveurs"
            }

        override fun accountFollowing(count: Int) =
            when (count) {
                1 -> "suivi"
                else -> "suivis"
            }

        override val accountAge = "√¢ge du compte"
        override val dateYearShort = "a"
        override val dateMonthShort = "m"
        override val dateDayShort = "j"
        override val timeHourShort = "h"
        override val timeMinuteShort = "min"
        override val timeSecondShort = "s"
        override val accountSectionPosts = "Postes"
        override val accountSectionAll = "Postes et r√©ponses"
        override val accountSectionPinned = "√âpingl√©"
        override val accountSectionMedia = "M√©dia"
        override val postTitle = "Postes"
        override val settingsTitle = "Param√®tres"
        override val settingsHeaderGeneral = "G√©n√©ral"
        override val settingsItemLanguage = "Langue"
        override val settingsHeaderLookAndFeel = "Apparence"
        override val settingsItemTheme = "Th√®me de l'interface utilisateur"
        override val settingsItemFontFamily = "Famille de polices"
        override val settingsItemDynamicColors = "Material You"
        override val settingsItemDynamicColorsSubtitle =
            "g√©n√©rer une palette en fonction de l'arri√®re-plan"
        override val settingsItemThemeColor = "Couleur du th√®me"
        override val settingsItemThemeColorSubtitle =
            "appliqu√© seulement si ¬´Material You¬ª est d√©sactiv√©"
        override val themeColorPurple = "Pieuvre pantouflarde"
        override val themeColorBlue = "Baleine balourde"
        override val themeColorLightBlue = "Dauphin distrait"
        override val themeColorGreen = "Grenouille gaffeuse"
        override val themeColorYellow = "H√©risson hilarant"
        override val themeColorOrange = "Renard raisonnable"
        override val themeColorRed = "Crabe croquant"
        override val themeColorPink = "Licorne lunatique"
        override val themeColorGray = "Raton-laveur rapide"
        override val themeColorWhite = "Ours ouat√©"
        override val messageUserUnlogged = "Vous devez √™tre connect√© pour acc√©der √† cette section ü™µ"
        override val buttonLogin = "Connexion"
        override val fieldNodeName = "Nom de l'instance"
        override val fieldUsername = "Nom d'utilisateur"
        override val fieldPassword = "Mot de passe"
        override val actionLogout = "D√©connexion"
        override val relationshipStatusFollowing = "Suivre"
        override val relationshipStatusFollowsYou = "Vous suit"
        override val relationshipStatusMutual = "Mutuelle"
        override val relationshipStatusRequestedToOther = "Demande envoy√©e"
        override val relationshipStatusRequestedToYou = "Demande en attente"
        override val notificationTypeEntry = "a publi√© un message"
        override val notificationTypeFavorite = "a ajout√© votre message √† ses favoris"
        override val notificationTypeFollow = "a commenc√© √† vous suivre"
        override val notificationTypeFollowRequest = "vous a envoy√© une demande de suivi"
        override val notificationTypeMention = "vous a mentionn√©"
        override val notificationTypePoll = "un sondage auquel vous avez particip√© a √©t√© cl√¥tur√©"
        override val notificationTypeReblog = "a repartag√© votre message"
        override val notificationTypeUpdate = "mis √† jour un message que vous avez repartag√©"
        override val exploreSectionHashtags = "Hashtags"
        override val exploreSectionLinks = "Liens"
        override val exploreSectionSuggestions = "Pour vous"

        override fun hashtagPeopleUsing(count: Int) =
            when (count) {
                1 -> "personne en parle"
                else -> "personnes en parlent"
            }

        override val feedTypeTitle = "Type de flux"
        override val followerTitle = "Suiveurs"
        override val followingTitle = "Suivre"
        override val actionFollow = "Suivre"
        override val actionUnfollow = "Ne pas suivre"
        override val actionDeleteFollowRequest = "Annuler la demande de suivi"
        override val sidebarAnonymousTitle = "Anonyme"
        override val sidebarAnonymousMessage =
            "Bienvenu(e)s √† Raccoon !\n\nVous pouvez vous connecter √† votre instance √† tout moment √† partir de l'√©cran Profil.\n\nAmusez-vous bien sur Friendica !"
        override val bookmarksTitle = "Signets"
        override val favoritesTitle = "Favoris"
        override val followedHashtagsTitle = "Hashtags suivis"
        override val infoEdited = "√©dit√©"

        override fun extendedSocialInfoFavorites(count: Int) =
            when (count) {
                1 -> "pr√©f√©r√©"
                else -> "pr√©f√©r√©s"
            }

        override fun extendedSocialInfoReblogs(count: Int) =
            when (count) {
                1 -> "repartage"
                else -> "repartage"
            }

        override val actionMuteNotifications = "D√©sactiver les notifications"
        override val createPostTitle = "Cr√©er un poste"
        override val messagePostEmptyText =
            "Veuillez fournir une pi√®ce jointe, un sondage ou un texte."
        override val visibilityPublic = "Public"
        override val visibilityUnlisted = "Non r√©pertori√©"
        override val visibilityPrivate = "Seuls suiveurs"
        override val visibilityDirect = "Seulement mentionn√©s"
        override val createPostBodyPlaceholder = "Votre nouveau poste g√©nial‚Ä¶ ü™Ñ"
        override val createPostAttachmentsSection = "Annexes"
        override val actionEdit = "√âditer"
        override val pictureDescriptionPlaceholder = "Description de l'image"
        override val insertLinkDialogTitle = "Lien d'insertion"
        override val insertLinkFieldAnchor = "Ancrage"
        override val insertLinkFieldUrl = "URL"
        override val selectUserDialogTitle = "S√©lectionner un utilisateur"
        override val selectUserSearchPlaceholder = "nom d'utilisateur ou pseudo"
        override val searchSectionUsers = "Utilisateurs"
        override val searchPlaceholder = "Rechercher dans Fediverse"
        override val messageSearchInitialEmpty = "Commencer √† taper quelque chose"
        override val topicTitle = "Sujet"
        override val threadTitle = "Conversation"
        override val buttonLoadMoreReplies = "Charger plus de r√©ponses"
        override val postSensitive = "Contenu sensible"
        override val actionCreateThreadInGroup = "Poster √†"
        override val settingsHeaderNsfw = "NSFW"
        override val settingsItemIncludeNsfw = "Inclure des contenus NSFW"
        override val settingsItemBlurNsfw = "Flouter les m√©dias NSFW"
        override val settingsItemDefaultTimelineType = "Type de ligne de temps par d√©faut"
        override val actionDelete = "Supprimer"
        override val actionShare = "Partager"
        override val actionCopyUrl = "Copier le lien"
        override val messageTextCopiedToClipboard = "Copi√© dans le presse-papiers ! üìã"
        override val contentScaleFit = "Ajustement de l'aspect"
        override val contentScaleFillWidth = "Largeur du remplissage"
        override val contentScaleFillHeight = "Hauteur du remplissage"
        override val contentScaleTitle = "Mode d'√©chelle"
        override val shareAsUrl = "Partager en tant qu'URL"
        override val shareAsFile = "Partager en tant que fichier"
        override val actionMute = "Couper le son"
        override val actionUnmute = "R√©tablir le son"
        override val settingsItemBlockedAndMuted = "G√©rer les filtres"
        override val manageBlocksSectionMuted = "En sourdine"
        override val manageBlocksSectionBlocked = "Bloqu√©"
        override val actionBlock = "Bloquer"
        override val actionUnblock = "D√©bloquer"
        override val loginMethodBasic = "ancien"
        override val actionPin = "√âpingler au profil"
        override val actionUnpin = "D√©s√©pingler du profil"
        override val settingsSectionDebug = "D√©bogage"
        override val settingsAbout = "Informations sur l'application"
        override val settingsAboutAppVersion = "Version"
        override val settingsAboutChangelog = "Changelog"
        override val settingsAboutViewGithub = "Voir sur GitHub"
        override val settingsAboutReportIssue = "Signaler un probl√®me"
        override val settingsAboutViewFriendica = "Voir sur Friendica"
        override val manageCirclesTitle = "Cercles"
        override val createCircleTitle = "Cr√©er un cercle"
        override val editCircleTitle = "Modifier un cercle"
        override val circleEditFieldName = "Nom du cercle"
        override val circleAddUsersDialogTitle = "S√©lectionner les utilisateurs √† ajouter"
        override val visibilityCircle = "Cercle"
        override val selectCircleDialogTitle = "S√©lectionner un cercle"
        override val messagePostInvalidVisibility =
            "Veuillez s√©lectionner une option de visibilit√© valide"
        override val settingsItemFontScale = "Taille de la police"
        override val fontScaleNormal = "Normal"
        override val fontScaleSmaller = "Plus petite"
        override val fontScaleSmallest = "Plus petit"
        override val fontScaleLarger = "Plus grand"
        override val fontScaleLargest = "Le plus grand"
        override val settingsItemUrlOpeningMode = "Mode d'ouverture de l'URL"
        override val urlOpeningModeExternal = "Navigateur externe"
        override val urlOpeningModeCustomTabs = "Onglets personnalis√©s"
        override val urlOpeningModeInternal = "Vue interne du web"
        override val dialogErrorTitle = "Oups..."
        override val messagePollVoteErrorBody =
            "Malheureusement, je ne suis qu'un d√©veloppeur mobile et je ne peux pas ajouter les m√©thodes back-end manquantes !\nJetez un ≈ìil √† ce probl√®me et mettez un üëç pour que les d√©veloppeurs sachent que cela peut valoir la peine de l'impl√©menter."
        override val buttonPollErrorOpenIssue = "Voir sur GitHu"
        override val actionVote = "Vot"
        override val pollExpired = "Expir"
        override val shortUnavailable = "N/D"

        override fun pollVote(count: Int): String =
            when (count) {
                1 -> "vote"
                else -> "votes"
            }

        override val pollExpiresIn = "Expire en"
        override val actionHideResults = "Afficher les r√©sultats"
        override val actionShowResults = "Cacher les r√©sultats"
        override val inboxConfigureFilterDialogTitle = "Configurer les filtres"
        override val inboxConfigureFilterDialogSubtitle =
            "Si une valeur est d√©s√©lectionn√©e, le filtre ne renverra que les √©l√©ments non lus."
        override val notificationTypeEntryName = "Notifications de publication"
        override val notificationTypeFavoriteName = "Favoris"
        override val notificationTypeFollowName = "Nouveaux suiveurs"
        override val notificationTypeFollowRequestName = "Demandes de suivi"
        override val notificationTypeMentionName = "Mentions et r√©ponses"
        override val notificationTypePollName = "Sondages"
        override val notificationTypeReblogName = "Repartage"
        override val notificationTypeUpdateName = "Mises √† jour des messages"
        override val muteDurationIndefinite = "Dur√©e ind√©termin√©e"
        override val selectDurationDialogTitle = "S√©lectionnez la dur√©e"
        override val muteDurationItem = "Vous ne verrez pas les messages de cet utilisateur pendant"
        override val muteDisableNotificationsItem = "D√©sactiver les notifications"
        override val actionSendFollowRequest = "Envoyer une demande"
        override val postBy = "par"
        override val customOption = "Personnalis√©"
        override val colorPickerDialogTitle = "S√©lectionner une couleur"
        override val followRequestsTitle = "Demandes de suivi"
        override val actionAccept = "Accepter"
        override val actionReject = "Rejeter"
        override val actionHideContent = "Cacher le contenu"
        override val messageEmptyInbox =
            "üéâ Vous √™tes au courant ! üéâ\n\nVous verrez les nouvelles notifications dans cette page d√®s qu'elles arriveront"
        override val createPostSpoilerPlaceholder = "Texte du spoiler"
        override val createPostTitlePlaceholder = "Titre (optionnel)"
        override val actionSwitchAccount = "Changer de compte"
        override val actionDeleteAccount = "Supprimer un compte"
        override val editProfileTitle = "Modifier le profil"
        override val editProfileSectionPersonal = "Donn√©es personnelles"
        override val editProfileItemDisplayName = "Nom d'affichage"
        override val editProfileItemBio = "Bio"
        override val editProfileSectionFlags = "Visibilit√© et autorisations"
        override val editProfileItemBot = "Je suis un robot"
        override val editProfileItemLocked =
            "Exiger une approbation manuelle pour les demandes de suivi"
        override val editProfileItemDiscoverable = "Me rendre rep√©rable dans les recherches"
        override val editProfileItemNoIndex = "Exclure mes messages de la chronologie publique"
        override val unsavedChangesTitle = "Modifications non enregistr√©es"
        override val messageAreYouSureExit = "√ätes-vous s√ªr de vouloir quitter ?"
        override val buttonSave = "Sauvegarder"
        override val editProfileSectionFields = "Champs personnalis√©s (exp√©rimental)"
        override val editProfileItemFieldKey = "Cl√©"
        override val editProfileItemFieldValue = "Valeur"
        override val editProfileSectionImages = "Images (exp√©rimental)"
        override val editProfileItemAvatar = "Avatar"
        override val editProfileItemHeader = "Banni√®re"
        override val nodeInfoTitle = "Informations sur l'instance"
        override val nodeInfoSectionRules = "R√®gles"
        override val nodeInfoSectionContact = "Contact"
        override val actionAddNew = "Ajouter un nouveau"
        override val directMessagesTitle = "Messages directs"

        override fun messages(count: Int): String =
            when (count) {
                1 -> "message"
                else -> "messages"
            }

        override val messageEmptyConversation =
            "C'est le d√©but d'une conversation √©pique avec l'autre utilisateur."
        override val followRequiredMessage =
            "Vous devez suivre l'autre utilisateur pour pouvoir lui envoyer un message direct !"
        override val galleryTitle = "Galerie"

        override fun items(count: Int): String =
            when (count) {
                1 -> "objet"
                else -> "objets"
            }

        override val galleryFieldAlbumName = "Nom de l'album"
        override val messageEmptyAlbum = "Il semble que cet album soit encore vide‚Ä¶ ‚ú®"
        override val actionMove = "D√©placer"
        override val pickFromGalleryDialogTitle = "S√©lectionner dans la galerie"

        override fun unreadMessages(count: Int): String =
            when (count) {
                1 -> "non lu"
                else -> "non lus"
            }

        override val messageCharacterLimitExceeded =
            "Vous avez d√©pass√© le nombre maximum de caract√®res autoris√©s"
        override val userFieldPersonalNote = "Note personnelle"
        override val actionEditPersonalNote = "Modifier la note"
        override val actionCancelEditPersonalNote = "Annuler la note d'√©dition"
        override val messageVideoNsfw = "Cette vid√©o peut contenir du contenu sensible üôà"
        override val buttonLoad = "Chargement"
        override val messageAreYouSureReblog =
            "Cet article date de plus d'un mois. √ätes-vous s√ªr de vouloir le repartager ?"
        override val unpublishedTitle = "Articles non publi√©s"
        override val unpublishedSectionScheduled = "Programm√©s"
        override val unpublishedSectionDrafts = "Brouillons"
        override val actionSetScheduleDate = "D√©finir l'horaire"
        override val actionUpdateScheduleDate = "Modifier l'horaire"
        override val actionPublishDefault = "Publier maintenant"
        override val scheduleDateIndication = "Pr√©vu pour :"
        override val messageScheduleDateInThePast =
            "Veuillez s√©lectionner une date de publication dans le futur"
        override val actionSaveDraft = "Enregistrer le brouillon"
        override val settingsItemDefaultPostVisibility = "Visibilit√© par d√©faut pour les messages"
        override val settingsItemDefaultReplyVisibility = "Visibilit√© par d√©faut pour les r√©ponses"
        override val reportCategoryLegal = "Question juridique"
        override val itemOther = "Autre"
        override val reportCategorySpam = "Spam"
        override val reportCategoryViolation = "Violation des r√®gles du serveur"
        override val messageMissingRules = "Veuillez s√©lectionner au moins une r√®gle"
        override val createReportTitleUser = "Signaler"
        override val createReportTitleEntry = "Signaler poste par"
        override val createReportItemCategory = "Cat√©gorie"
        override val createReportCommentPlaceholder =
            "Veuillez d√©crire le probl√®me que vous avez rencontr√©"
        override val createReportItemRules = "Violation des r√®gles"

        override fun createReportSelectedRules(count: Int) =
            when (count) {
                1 -> "r√®gle s√©lectionn√©e"
                else -> "r√®gles s√©lectionn√©es"
            }

        override val createReportItemForward = "Transmettre le rapport"
        override val actionReportUser = "Signaler utilisateur"
        override val actionReportEntry = "Signaler poste"
        override val actionViewDetails = "D√©tails"
        override val actionAddImage = "Ajouter image"
        override val actionAddImageFromGallery = "Ajouter image (galerie)"
        override val actionAddPoll = "Ajouter un sondage"
        override val actionRemovePoll = "Supprimer un sondage"
        override val createPostPollSection = "Sondage"
        override val createPostPollOptionLabel = "Option"
        override val createPostPollItemMultiple = "Autoriser les choix multiples"
        override val createPostPollItemExpirationDate = "Date d'expiration"
        override val messageInvalidPollError =
            "Sondage non valide, veuillez v√©rifier les options et la date d'expiration"
        override val userFeedbackFieldEmail = "Courriel ou nom d'utilisateur (facultatif)"
        override val userFeedbackFieldComment = "Commentaires"
        override val userFeedbackCommentPlaceholder =
            "D√©crivez le probl√®me que vous avez rencontr√© ou laissez simplement un commentaire üñãÔ∏è"
        override val changeNodeDialogTitle = "Modifier l'instance"
        override val actionQuote = "Citation"
        override val actionAddSpoiler = "Ajouter spoiler"
        override val actionRemoveSpoiler = "Supprimer spoiler"
        override val actionAddTitle = "Ajouter titre"
        override val actionRemoveTitle = "Supprimer titre"
        override val actionRevealContent = "R√©v√©ler le contenu"
        override val settingsItemExcludeRepliesFromTimeline =
            "Exclure les r√©ponses de la chronologie"
        override val insertEmojiTitle = "Ins√©rer un emoji"
        override val messageLoadingUsers = "Chargement des utilisateurs"
        override val actionOpenPreview = "Ouvrir l'aper√ßu"
        override val actionSwitchToClassicMode = "Passer en mode classique"
        override val actionSwitchToForumMode = "Passer en mode forum"
        override val settingsItemOpenGroupsInForumModeByDefault =
            "Ouvrir les groupes en mode forum par d√©faut"
        override val actionInsertList = "Ins√©rer une liste"
        override val actionDismissAllNotifications = "Supprimer toutes les notifications"
        override val settingsItemMarkupMode = "Balisage pour la composition"
        override val markupModePlainText = "Texte brut"
        override val messageAltTextMissingError =
            "Certaines pi√®ces jointes n'ont pas de texte alternatif, pensez √† l'ins√©rer pour des raisons d'accessibilit√©"
        override val buttonPublishAnyway = "Publier quand m√™me"
        override val actionCopyToClipboard = "Copier dans le presse-papiers"
        override val actionSaveToCalendar = "Enregistrer dans le calendrier"
        override val settingsItemMaxPostBodyLines = "Nombre maximal lignes corps des postes"
        override val settingsOptionUnlimited = "Illimit√©"
        override val settingsAboutLicences = "Licences"
        override val settingsOptionBackgroundNotificationCheck = "V√©rifier les notifications en arri√®re-plan"
        override val settingsSubtitleBackgroundNotificationRestricted =
            "Veuillez activer l'activit√© en arri√®re-plan pour l'app dans les param√®tres du syst√®me"
        override val settingsSubtitleBackgroundNotificationNotRestricted =
            "Pas de restriction du syst√®me pour l'activit√© en arri√®re-plan "
        override val durationNever = "Jamais"
        override val unreadNotificationTitle = "Consultez vos notifications !"

        override fun unreadNotificationBody(count: Int) =
            when (count) {
                1 -> "Il y a $count article dans le üóëÔ∏è"
                else -> "Il y a $count articles dans le üóëÔ∏è"
            }

        override val settingsAboutUserManual = "Manuel de l'utilisateur"
        override val editProfileItemHideCollections =
            "Rendre les listes de suiveurs et de suivis priv√©es"
        override val settingsAboutMatrix = "Rejoindre la salle Matrix"
        override val settingsAutoloadImages = "Mode de chargement des images"
        override val circleTypeGroup = "Groupes"
        override val circleTypePredefined = "Canaux"
        override val circleTypeUserDefined = "Tes listes"
        override val settingsItemNotificationMode = "Mode notifications"
        override val settingsNotificationModeDisabled = "D√©sactiv√©"
        override val settingsNotificationModePull = "Tirer"
        override val settingsNotificationModePullExplanation = "en arri√®re-plan"
        override val settingsNotificationModePush = "Pousser"
        override val settingsNotificationModePushExplanation = "UnifiedPush"
        override val settingsItemPushNotificationState = "√âtat des notifications push"
        override val settingsPushNotificationStateUnsupported = "sans support"
        override val settingsPushNotificationStateInitializing = "Initialisation‚Ä¶"
        override val settingsPushNotificationStateNoDistributors = "Pas de distributeurs disponible"
        override val settingsPushNotificationStateNoDistributorSelected =
            "S√©lectionner un distributeur"
        override val settingsPushNotificationStateIdle = "Au repos"
        override val settingsPushNotificationStateEnabled = "Actif"
        override val experimental = "exp√©rimental"
        override val loginTitle = "ü¶ù Bienvenus ! ü¶ù"
        override val loginSubtitle =
            "Connectez-vous √† une instance pour commencer √† suivre d'autres personnes, cr√©er de nouveaux messages ou des r√©ponses et g√©rer vos favoris ou vos signets."
        override val moreInfo = "En savoir plus"
        override val loginMoreInfoBottomSheetContent =
            "Le flux de connexion commencera dans l'application en s√©lectionnant l'instance, " +
                "apr√®s quoi vous continuerez le flux OAuth2 dans un navigateur web." +
                "\n\nSi vous n'avez pas de compte, veuillez d'abord choisir une instance et vous inscrire dans votre navigateur."
        override val loginFriendicaHeader = "Je suis sur Friendica"
        override val loginMastodonHeader = "Je suis sur Mastodon"
        override val helpMeChooseAnInstance = "Aidez-moi √† choisir une instance"
        override val exempliGratia = "e. g."
        override val newAccountTitle = "Ajouter compte"
        override val imageLoadingModeAlways = "Toujours"
        override val imageLoadingModeOnDemand = "Sur demande"
        override val imageLoadingModeOnWiFi = "En WiFi"
        override val messageReplyVisibilityGreaterThanParentError =
            "Vous publiez une r√©ponse dont la visibilit√© est plus large que celle du message original"
        override val settingsItemCrashReportEnabled = "Activer les rapports de crash anonymes"
        override val messageRestartToApplyChanges =
            "Veuillez red√©marrer l'application pour appliquer les changements"
        override val settingsItemHideNavigationBarWhileScrolling =
            "Masquer la barre de navigation lors du d√©filement"
        override val settingsItemAppIcon = "Ic√¥ne de l'application"
        override val appIconDefault = "D√©faut"
        override val appIconClassical = "Classique"
        override val settingsItemExport = "Exporter les param√®tres"
        override val settingsItemImport = "Importer les param√®tres"
        override val actionExport = "Exporter"
        override val actionChangeMarkupMode = "Modifier type de balisage"
        override val confirmChangeMarkupMode =
            "Si vous modifiez le type de balisage, toutes les mises en forme seront perdues. Poursuivre quand m√™me ?"
        override val actionEditMembers = "Modifier les membres"
        override val settingsItemBarTheme = "Th√®me de la barre d'√©tat et de navigation"
        override val barThemeSolid = "Solide"
    }
